#!/usr/bin/env bash

set -e

repo_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." >/dev/null 2>&1 && pwd )"
script_dir="$repo_dir/bin"
source "$script_dir/bash_utils.sh"
os_env="$(get_os_type)"

NODE_ARCH="${NODE_ARCH:-x64}"
if [ "$NODE_VERSION" = "" ]; then
    echo "Please set NODE_VERSION env. var."
    exit 1
else
    echo "NODE_VERSION=$NODE_VERSION"
    echo "NODE_ARCH=$NODE_ARCH"
fi

if [ "$GITHUB_TOKEN" = "" ]; then
    echo "Please set GITHUB_TOKEN env. var."
    exit 1
else
    echo "GITHUB_TOKEN found"
fi

if [ "$CREATE_RELEASE" = "true" ]; then
    check_asset_flags=""
else
    check_asset_flags="--no-create-release"
fi
echo "CREATE_RELEASE=$CREATE_RELEASE"

echo "Getting commit hash ..."
if [ "$GIT_COMMIT" = "" ]; then
    export GIT_COMMIT="$(git rev-parse HEAD)"
fi
echo "GIT_COMMIT=$GIT_COMMIT"
echo ""

if [ "$os_env" = "linux" ]; then
    if [ "$IN_DOCKER" != "true" ]; then
        echo "Doing linux build in docker container ..."
        docker build --tag nexe_build_centos_7 "$script_dir/"
        echo "Creating container ..."
        docker create -t --name nexe_build_centos_7_container \
            -v "$repo_dir/bin/:/nexe_build/bin/" -v "$repo_dir/dist/:/nexe_build/dist/" -v "$HOME/.ccache/:/root/.ccache/" \
            --env IN_DOCKER=true --env CREATE_RELEASE --env NODE_VERSION --env GIT_COMMIT --env GITHUB_TOKEN \
            nexe_build_centos_7 /nexe_build/bin/run_cd ||  true
            # -v "$HOME/.nexe/:/root/.nexe/" \
        docker cp "$repo_dir/package.json" "nexe_build_centos_7_container:/nexe_build/package.json"
        docker cp "$repo_dir/package-lock.json" "nexe_build_centos_7_container:/nexe_build/package-lock.json"
        docker cp "$repo_dir/.nvmrc" "nexe_build_centos_7_container:/nexe_build/.nvmrc"
        echo "Starting docker container build ..."
        time docker start -a nexe_build_centos_7_container
        echo "Completed docker container build."
        echo "Copying out files ..."
        docker cp "nexe_build_centos_7_container:/nexe_build/NEXE_ASSET_NAME" "$repo_dir/NEXE_ASSET_NAME"
        docker cp "nexe_build_centos_7_container:/nexe_build/RELEASE_ID" "$repo_dir/RELEASE_ID"
        exit 0
    else
        echo "Installing desired version of node.js ..."
        source ~/.bashrc
        cd /nexe_build/
        nvm install --no-progress
        nvm use
        chown -R root:root ~/.nvm/
        echo "Running: npm ci"
        npm ci
    fi
fi

echo "Running: bin/check_asset"
set +e
$script_dir/check_asset "$NODE_VERSION" "$GIT_COMMIT" "$NODE_ARCH" $check_asset_flags
exit_code="$?"
set -e

case "$exit_code" in
    "0")
        echo "Detected that build is not needed!"
        exit 0
        ;;
    "10")
        echo "Running: bin/install_dependencies"
        $script_dir/install_dependencies || exit 2
        echo "Running: bin/build_nexe build $NODE_VERSION $NODE_ARCH"
        $script_dir/build_nexe build "$NODE_VERSION" "$NODE_ARCH" || exit 3
        echo "Finished: bin/build_nexe build $NODE_VERSION $NODE_ARCH"
        ;;
    *)
        echo "Error exit code detected ($exit_code) from check_asset script! Crashing."
        exit 1
        ;;
esac
